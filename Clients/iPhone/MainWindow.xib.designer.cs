// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Gablarski.Clients.iPhone {
	
	
	// Base type probably should be MonoTouch.Foundation.NSObject or subclass
	[MonoTouch.Foundation.Register("AppDelegate")]
	public partial class AppDelegate {
		
		[MonoTouch.Foundation.Export("Connect")]partial void Connect (MonoTouch.UIKit.UIButton sender);

		[MonoTouch.Foundation.Connect("window")]
		protected MonoTouch.UIKit.UIWindow window {
			get {
				return ((MonoTouch.UIKit.UIWindow)(this.GetNativeField("window")));
			}
			set {
				this.SetNativeField("window", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("tabs")]
		protected MonoTouch.UIKit.UITabBarController tabs {
			get {
				return ((MonoTouch.UIKit.UITabBarController)(this.GetNativeField("tabs")));
			}
			set {
				this.SetNativeField("tabs", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("serverIn")]
		protected MonoTouch.UIKit.UITextField serverIn {
			get {
				return ((MonoTouch.UIKit.UITextField)(this.GetNativeField("serverIn")));
			}
			set {
				this.SetNativeField("serverIn", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("portIn")]
		protected MonoTouch.UIKit.UITextField portIn {
			get {
				return ((MonoTouch.UIKit.UITextField)(this.GetNativeField("portIn")));
			}
			set {
				this.SetNativeField("portIn", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("nicknameIn")]
		protected MonoTouch.UIKit.UITextField nicknameIn {
			get {
				return ((MonoTouch.UIKit.UITextField)(this.GetNativeField("nicknameIn")));
			}
			set {
				this.SetNativeField("nicknameIn", value);
			}
		}
		
		[MonoTouch.Foundation.Connect("connectButton")]
		protected MonoTouch.UIKit.UIButton connectButton {
			get {
				return ((MonoTouch.UIKit.UIButton)(this.GetNativeField("connectButton")));
			}
			set {
				this.SetNativeField("connectButton", value);
			}
		}
	}
}
