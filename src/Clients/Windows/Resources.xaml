<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:windows="clr-namespace:Gablarski.Clients.Windows">
	
	<Style x:Key="IconButton" TargetType="Button">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>

	<Style x:Key="Hint" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Margin" Value="5,2" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="Focusable" Value="False" />
	</Style>

	<Style x:Key="TextInput" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
	</Style>

	<Style x:Key="PasswordInput" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
	</Style>
	
	<windows:AvatarConverter x:Key="AvatarConverter" />

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

	<windows:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

	

	<Style x:Key="MetroTreeViewItem" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="Width" Value="16"/>
									<Setter Property="Height" Value="16"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
													<Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898">
														<Path.Data>
															<PathGeometry>
																<PathGeometry.Figures>
																	<PathFigureCollection>
																		<PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
																			<PathFigure.Segments>
																				<PathSegmentCollection>
																					<LineSegment Point="0 6"/>
																					<LineSegment Point="6 0"/>
																				</PathSegmentCollection>
																			</PathFigure.Segments>
																		</PathFigure>
																	</PathFigureCollection>
																</PathGeometry.Figures>
															</PathGeometry>
														</Path.Data>
														<Path.RenderTransform>
															<RotateTransform Angle="135" CenterX="3" CenterY="3"/>
														</Path.RenderTransform>
													</Path>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA"/>
														<Setter TargetName="ExpandPath" Property="Fill" Value="Transparent"/>
													</Trigger>

													<Trigger Property="IsChecked" Value="True">
														<Setter TargetName="ExpandPath" Property="RenderTransform">
															<Setter.Value>
																<RotateTransform Angle="180" CenterX="3" CenterY="3"/>
															</Setter.Value>
														</Setter>
														<Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959"/>
														<Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource MiddleLightBrush}"/>
							<Setter Property="Foreground" Value="{DynamicResource ContrastBrush}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="MetroTreeView" TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource MetroTreeViewItem}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource DisabledBrush}"/>
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>