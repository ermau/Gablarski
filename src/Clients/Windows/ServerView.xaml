<UserControl
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:vms="clr-namespace:Gablarski.Clients.ViewModels;assembly=Gablarski.Clients"
			 xmlns:metro="http://schemas.codeplex.com/elysium"
			 xmlns:windows="clr-namespace:Gablarski.Clients.Windows"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="Gablarski.Clients.Windows.ServerView"
			 mc:Ignorable="d" 
			 d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance {x:Type vms:ServerViewModel}}">
	<UserControl.Resources>
		<HierarchicalDataTemplate DataType="{x:Type vms:ChannelViewModel}" ItemsSource="{Binding Users}">
			<TextBlock Text="{Binding Channel.Name, Converter={StaticResource UpperCaseConverter}}" FontSize="14" FontFamily="Segoe UI Light" Foreground="{DynamicResource ForegroundBrush}" Margin="5" />
		</HierarchicalDataTemplate>

		<DataTemplate DataType="{x:Type vms:UserViewModel}">
			<windows:UserView />
		</DataTemplate>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		
		<Border Grid.RowSpan="2" Background="Black" Opacity="0.8" Visibility="{Binding IsConnecting, Converter={StaticResource BooleanToVisibilityConverter}}" Panel.ZIndex="1">
			<StackPanel VerticalAlignment="Center">
				<metro:ProgressRing State="Indeterminate" Height="100" Width="100" />
				<!--<Button Width="75" Height="30">Cancel</Button>-->
			</StackPanel>
		</Border>

		<Grid Grid.Row="0" Height="48">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="48" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<metro:CommandButton Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding LeaveServer}">
				<Canvas>
					<Path Canvas.Left="-8.5" Canvas.Top="-6.74" Width="16.52" Height="13.48" Stretch="Fill" Fill="{DynamicResource ForegroundBrush}" Data="F1 M 57,42L 57,34L 32.25,34L 42.25,24L 31.75,24L 17.75,38L 31.75,52L 42.25,52L 32.25,42L 57,42 Z" />
				</Canvas>
			</metro:CommandButton>
			<TextBlock Grid.Column="1" Text="{Binding ServerInfo.Name}" FontSize="26" VerticalAlignment="Center" />
		</Grid>

		<TreeView Grid.Row="1" ItemsSource="{Binding Channels}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
			<TreeView.Style>
				<Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
					<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
					<Setter Property="BorderThickness" Value="0"/>
					<Setter Property="Padding" Value="1"/>
					<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
					<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
					<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeView}">
								<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
									<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
										<ItemsPresenter/>
									</ScrollViewer>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource DisabledBrush}"/>
									</Trigger>
									<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
										<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel/>
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>
			</TreeView.Style>
			<TreeView.ItemContainerStyle>
				<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="Padding" Value="1,0,0,0"/>
					<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					
					<Setter Property="IsExpanded" Value="True" />

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
										<ToggleButton.Style>
											<Style TargetType="{x:Type ToggleButton}">
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Width" Value="16"/>
												<Setter Property="Height" Value="16"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ToggleButton}">
															<Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
																<Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898">
																	<Path.Data>
																		<PathGeometry>
																			<PathGeometry.Figures>
																				<PathFigureCollection>
																					<PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
																						<PathFigure.Segments>
																							<PathSegmentCollection>
																								<LineSegment Point="0 6"/>
																								<LineSegment Point="6 0"/>
																							</PathSegmentCollection>
																						</PathFigure.Segments>
																					</PathFigure>
																				</PathFigureCollection>
																			</PathGeometry.Figures>
																		</PathGeometry>
																	</Path.Data>
																	<Path.RenderTransform>
																		<RotateTransform Angle="135" CenterX="3" CenterY="3"/>
																	</Path.RenderTransform>
																</Path>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA"/>
																	<Setter TargetName="ExpandPath" Property="Fill" Value="Transparent"/>
																</Trigger>

																<Trigger Property="IsChecked" Value="True">
																	<Setter TargetName="ExpandPath" Property="RenderTransform">
																		<Setter.Value>
																			<RotateTransform Angle="180" CenterX="3" CenterY="3"/>
																		</Setter.Value>
																	</Setter>
																	<Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959"/>
																	<Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>
									<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
										<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</Border>
									<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsExpanded" Value="false">
										<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="HasItems" Value="false">
										<Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
									</Trigger>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBrush}"/>
										<Setter Property="Foreground" Value="{DynamicResource ContrastBrush}"/>
									</Trigger>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsSelected" Value="true"/>
											<Condition Property="IsSelectionActive" Value="false"/>
										</MultiTrigger.Conditions>
										<!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>-->
									</MultiTrigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource DisabledBrush}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="ItemsPanel">
								<Setter.Value>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel/>
									</ItemsPanelTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>
			</TreeView.ItemContainerStyle>
		</TreeView>

		<Border Background="{DynamicResource HighlightBrush}" Grid.Row="2">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
				<StackPanel.Resources>
					<Style TargetType="metro:CommandButton" BasedOn="{StaticResource {x:Type metro:CommandButton}}">
						<Setter Property="Margin" Value="5" />
					</Style>
				</StackPanel.Resources>
				
				<metro:CommandButton Content="{DynamicResource MaxSound32}" Command="{Binding MuteSound}" Background="Transparent" Width="32" Height="32" />
				<metro:CommandButton Content="{DynamicResource Microphone32}" Command="{Binding MuteMicrophone}" Background="Transparent" Width="32" Height="32" />
			</StackPanel>
		</Border>
	</Grid>
</UserControl>
